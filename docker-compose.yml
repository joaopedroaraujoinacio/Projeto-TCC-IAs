services:
  app:
    build: 
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:                         
    - ./backend/templates:/app/templates
    - ./backend/static:/app/static
    environment:
    - SEARXNG_URL=http://searxng-rag:8080
    depends_on:
    - searxng-rag
    - redis
    networks:
      - app_network
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: all
                capabilities: [gpu]

  ollama-setup:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - app_network
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama:11434
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "Checking if models are already installed..."
        if ollama list | grep -q "nomic-embed-text" && ollama list | grep -q "llama3.2:3b"; then
          echo "Models already installed, skipping..."
          exit 0
        fi
        echo "Installing models (this may take a few minutes on first run)..."
        ollama pull nomic-embed-text
        ollama pull llama3.2:3b
        echo "âœ“ Models ready!"
    restart: "no"

  searxng-rag:
      image: searxng/searxng:latest
      container_name: searxng-rag
      restart: unless-stopped
      networks:
        - app_network
      environment:
        - SEARXNG_SECRET=change-this-to-any-random-string
      volumes:
        - ./searxng-settings.yml:/etc/searxng/settings.yml:ro

  redis:
    image: redis:alpine
    container_name: searxng-redis
    command: redis-server --save 30 1 --loglevel warning
    restart: unless-stopped
    networks:
      - app_network

volumes:
  postgres_data:
  ollama_data:
  ssl-certs:

networks:
  app_network:
    driver: bridge

