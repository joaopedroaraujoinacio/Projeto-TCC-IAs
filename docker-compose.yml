services:

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ssl-certs:/etc/nginx/ssl:ro   
  #   depends_on:
  #     - app
  #     - ollama
  #   networks:
  #     - app_network
  #   restart: unless-stopped

  postgres:
    image: ankane/pgvector:v0.5.0
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  app:
    build: 
      context: ./new_backend/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    # volumes:                         
    # - ssl-certs:/app/ssl
    # - ./templates:/app/templates
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - OLLAMA_URL=${OLLAMA_URL}
      - GIN_MODE=debug
      - LOG_LEVEL=debug
    networks:
      - app_network
    restart: unless-stopped

  # front:
  #   build:
  #     context: ./frontend/
  #     dockerfile: Dockerfile
  #   networks:
  #     - app_network
  #   restart: unless-stopped
  
  ollama:
    build:
      context: ./new_backend/
      dockerfile: Dockerfile.ollama
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility

  # Uncoment code below for mac
  # ollama:
  #   build:
  #     context: ./new_backend/
  #     dockerfile: Dockerfile.ollama
  #   # ports:
  #   #   - "11434:11434"
  #   networks:
  #     - app_network
  #   restart: unless-stopped
  #   volumes:
  #     - ollama_data:/root/.ollama

volumes:
  postgres_data:
  ollama_data:
  ssl-certs:

networks:
  app_network:
    driver: bridge

