services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro 
      - ssl-certs:/etc/nginx/ssl:ro   
    depends_on:
      - app
      - ollama
    networks:
      - app_network
    restart: unless-stopped

  postgres:
    image: ankane/pgvector:v0.5.0
    environment:
      POSTGRES_DB: golang_crud
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    # ports:
      # - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  app:
    build: .
    # ports:
    #   - "8080:8080"
    volumes:                         
    - ssl-certs:/app/ssl
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:password123@postgres:5432/golang_crud?sslmode=disable
      - OLLAMA_URL=http://ollama:11434
      - GIN_MODE=debug
      - LOG_LEVEL=debug
    networks:
      - app_network
    restart: unless-stopped

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    # ports:
    #   - "11434:11434"
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama

volumes:
  postgres_data:
  ollama_data:
  ssl-certs:

networks:
  app_network:
    driver: bridge
